pragma cashscript ^0.3.0;

contract oneForTen(bytes20 pkh) {

	function spend(pubkey pk, sig s) {
		
		//verifies signature and pk->pkh
		require(hash160(pk) == pkh);
        	require(checkSig(s, pk));

	}

	// compares the token ID used by the JS to the ID stored onchain via blockpress
	function validateTokenID(string localTokenId, string onchainTokenId) {
		
		require(localTokenId == onchainTokenId);
		
	}

	// TODO: move the following distribution logic in here
	//
	// Initiate a second loop through tokenHolders Array to send:
	//	1. (distributionRate * tokenHolder.tokenBalance) worth of BCH to tokenHolder.cashAddress
	//	2. track remaining BCH tokens for distribution 
	//
  	// Challenges:
  	//  1. No existing BCH op codes to store and retrieve data, hence not sure of how the contract to keep 'state'
  	//  2. No loop functions in cashscript yet so unable to traverse the array onchain - a security risk
  	//  3. No * operand due to incompatibility with Bitcoin script, so can't calculate distribution ratio onchain - a security risk
  	//  4. Figure out logic to set aside transaction fees for each dividend distribution
}
